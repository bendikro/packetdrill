
`sysctl -q net.ipv4.tcp_rdb_max_packets=0`

0     socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
   +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
   +0 setsockopt(3, SOL_TCP, TCP_NODELAY, [1], 4) = 0
   +0 setsockopt(3, SOL_TCP, TCP_RDB, [1], 4) = 0
   +0 setsockopt(3, IPPROTO_TCP, TCP_CONGESTION, "reno", 4) = 0
   +0 bind(3, ..., ...) = 0
   +0 listen(3, 1) = 0

   +0 < S 0:0(0) win 65535 <mss 1460,sackOK,nop,nop>
   +0 > S. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK>
+.200 < . 1:1(0) ack 1 win 65535
   +0 accept(3, ..., ...) = 4

//+0 %{ print "tcpi_snd_cwnd=%d tcpi_snd_ssthresh=%d" % (tcpi_snd_cwnd, tcpi_snd_ssthresh) }%
//+.200 < . 1:1(0) ack 201 win 65535

//+0 %{ print "tcpi_rto=%d" % (tcpi_rto) }%
//+0 %{ print "tcpi_snd_mss=%d tcpi_rcv_mss=%d" % (tcpi_snd_mss, tcpi_rcv_mss) }%
//+0 %{ print "tcpi_snd_cwnd=%d, tcpi_unacked=%d, tcpi_lost=%d, tcpi_retrans=%d" % (tcpi_snd_cwnd, tcpi_unacked, tcpi_lost, tcpi_retrans) }%


4.00 write(4, ..., 200) = 200
    +0  > P. 1:201(200) ack 1
4.01 write(4, ..., 200) = 200
    +0  > P. 1:401(400) ack 1
4.02 write(4, ..., 200) = 200
    +0  > P. 1:601(600) ack 1
4.03 write(4, ..., 200) = 200
    +0  > P. 1:801(800) ack 1

//+0 %{ print "tcpi_snd_cwnd=%d tcpi_snd_ssthresh=%d tcpi_unacked=%d tcpi_lost=%d, tcpi_retrans=%d, tcpi_ca_state=%d"\
//       % (tcpi_snd_cwnd, tcpi_snd_ssthresh, tcpi_unacked, tcpi_lost, tcpi_retrans, tcpi_ca_state) }%


// Receive ACK that covers two packets
4.04 < . 1:1(0) ack 801 win 65535

//+0 %{ print "tcpi_snd_cwnd=%d tcpi_snd_ssthresh=%d tcpi_unacked=%d tcpi_lost=%d, tcpi_retrans=%d, tcpi_ca_state=%d"\
//       % (tcpi_snd_cwnd, tcpi_snd_ssthresh, tcpi_unacked, tcpi_lost, tcpi_retrans, tcpi_ca_state) }%

+0 %{ assert tcpi_snd_cwnd == 4 }%

// RDB detected loss, so CA state should be TCP_CA_CWR (2)
+0 %{ assert tcpi_ca_state == 2 }%
